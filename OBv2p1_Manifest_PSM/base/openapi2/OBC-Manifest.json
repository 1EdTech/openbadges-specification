{
    "swagger" : "2.0",
    "info" : {
        "version" : "2.1",
        "title" : "Open Badges OpenAPI (JSON) Definition",
        "description" : "TBD",
        "termsOfService" : "Permission is granted to all parties to use excerpts from this document as needed in producing requests for proposals. The limited permissions granted above are perpetual and will not be revoked by IMS or its successors or assigns. THIS API DEFINITION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE  CONSORTIUM, NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF ANY NATURE WHATSOEVER,  DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS API DEFINITION.",
        "contact" : {
            "name" : "Lisa Mattson (COO), IMS Global ",
            "url" : "http://www.imsglobal.org",
            "email" : "lmattson@imsglobal.org"
        },
        "license" : {
            "name" : "IMS Global",
            "url" : "https://www.imsglobal.org/license.html"
        }
    },
    "host" : "",
    "basePath" : "",
    "schemes" : [ "http","https" ],
    "tags" : [
        {
            "name" : "OBC-Manifest",
            "description" : "Open Badges Connect Service Manifest interface."
        }
    ],
    "paths" : {
        "/.well-known/badgeconnect.json" : {
            "get" : {
                "operationId" : "getManifest",
                "summary" : "The REST read request message for the getManifest() API call.",
                "tags" : [ "OBC-Manifest" ],
                "description" : "Open Badges Connect Service manifest read operation.",
                "responses" : {
                    "200" : {
                        "description" : "This is the response when the request has been completed successfully.",
                        "schema" : {
                            "$ref" : "#/definitions/Manifest.Type"
                        }
                    },
                    "404" : {
                        "description" : "This is the response when the provider does not support the badge connect API."
                    },
                    "421" : {
                        "description" : "This is the response when the request was not made over secure TLS protocol."
                    },
                    "default" : {
                        "description" : "This is the response when some other error has occured."
                    }
                }
            }
        }
    },
    "definitions" : {
        "BadgeConnectAPI.Type" : {
            "description" : "Configuration information about a single implementation.",
            "type" : "object",
            "properties" : {
                "id" : {
                    "description" : "Model Primitive Datatype = AnyURI. Unique IRI for the configuration.",
                    "type" : "string",
                    "format" : "uri"
                },
                "type" : {
                    "description" : "Model Primitive Datatype = AnyURI. JSON-LD type of the configuration object. Defaults to BadgeConnectAPI.",
                    "type" : "string",
                    "format" : "uri"
                },
                "name" : {
                    "description" : "Model Primitive Datatype = String. The name of the platform supporting the API. This SHOULD reflect the user-facing identity of the platform requesting authorization.",
                    "type" : "string"
                },
                "image" : {
                    "description" : "Model Primitive Datatype = AnyURI. An image representing the platform. May be a URI to a hosted image or a Data URI.",
                    "type" : "string",
                    "format" : "uri"
                },
                "apiBase" : {
                    "description" : "Model Primitive Datatype = AnyURI. Fully qualified URL that will be concatenated with the API endpoints. It SHOULD NOT have a trailing slash '/'. E.g. apiBase + '/assertions'.",
                    "type" : "string",
                    "format" : "uri"
                },
                "scopesOffered" : {
                    "description" : "Model Primitive Datatype = AnyURI. Applies to Hosts only. An array of strings listing the scopes supported by the Host in the form of fully qualified URLs to the scope descriptors.",
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                        "type" : "string",
                        "format" : "uri"
                    }
                },
                "version" : {
                    "description" : "Model Primitive Datatype = String. A string representing the implemented version. MUST be in the format of vMAJORpMINOR where MAJOR and MINOR are integers.",
                    "type" : "string"
                },
                "registrationUrl" : {
                    "description" : "Model Primitive Datatype = AnyURI. A fully qualifed URL to the host's dynamic client registration endpoint.",
                    "type" : "string",
                    "format" : "uri"
                },
                "authorizationUrl" : {
                    "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the host's authorization endpoint.",
                    "type" : "string",
                    "format" : "uri"
                },
                "tokenUrl" : {
                    "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the host's token request endpoint for exchanging an authorization code for a bearer token.",
                    "type" : "string",
                    "format" : "uri"
                },
                "tokenRevocationUrl" : {
                    "description" : "Model Primitive Datatype = AnyURI. A fully qualifed URL to the host's token revocation endpoint.",
                    "type" : "string",
                    "format" : "uri"
                },
                "termsOfServiceUrl" : {
                    "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the platform's terms of service. Other platforms SHOULD link to this resource as part of their authorization interface.",
                    "type" : "string",
                    "format" : "uri"
                },
                "privacyPolicyUrl" : {
                    "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the platform's privacy policy. Other platforms SHOULD link to this resource as part of their authorization interface.",
                    "type" : "string",
                    "format" : "uri"
                }
            },
            "required" : [ "name","apiBase","scopesOffered","version","registrationUrl","authorizationUrl","tokenUrl","termsOfServiceUrl","privacyPolicyUrl" ],
            "additionalProperties" : false
        },
        "Manifest.Type" : {
            "description" : "Provider configuration information. A provider may support multiple implementations.",
            "type" : "object",
            "properties" : {
                "@context" : {
                    "description" : "Model Primitive Datatype = AnyURI. The URL of the JSON-LD @context file for the manifest.",
                    "type" : "string",
                    "format" : "uri"
                },
                "id" : {
                    "description" : "Model Primitive Datatype = AnyURI. Unique IRI for the manifest.",
                    "type" : "string",
                    "format" : "uri"
                },
                "type" : {
                    "description" : "Model Primitive Datatype = AnyURI. The JSON-LD type of the manifest. Defaults to Manifest.",
                    "type" : "string",
                    "format" : "uri"
                },
                "badgeConnectAPI" : {
                    "description" : "Set of BadgeConnectAPI configurations.",
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                        "$ref" : "#/definitions/BadgeConnectAPI.Type"
                    }
                }
            },
            "required" : [ "@context","id","badgeConnectAPI" ],
            "additionalProperties" : false
        }
    },
    "consumes" : [ "application/json" ],
    "produces" : [ "application/json" ]
}
