{
    "openapi" : "3.0.0",
    "info" : {
        "version" : "2.1",
        "title" : "Open Badges OpenAPI (JSON) Definition",
        "description" : "Open Badges Connect is a secure REST interface for exchanging Open Badges.",
        "termsOfService" : "https://www.imsglobal.org/license.html",
        "contact" : {
            "name" : "Lisa Mattson (COO), IMS Global ",
            "url" : "http://www.imsglobal.org",
            "email" : "lmattson@imsglobal.org"
        },
        "license" : {
            "name" : "IMS Global",
            "url" : "https://www.imsglobal.org/license.html"
        }
    },
    "servers" : [
        {
            "url" : "www.imsglobal.org/ims/ob/v2p1/",
            "description" : "The above Server URL should be changed to the actual server location."
        }
    ],
    "tags" : [
        {
            "name" : "OBC-Manifest",
            "description" : "Open Badges Connect manifest interface."
        },
        {
            "name" : "OBC-Service",
            "description" : "Open Badges Connect service interface."
        }
    ],
    "paths" : {
        "/.well-known/badgeconnect.json" : {
            "get" : {
                "operationId" : "getManifest",
                "summary" : "The REST read request message for the getManifest() API call.",
                "tags" : [ "OBC-Manifest" ],
                "description" : "Open Badges Connect Service manifest read operation.",
                "responses" : {
                    "200" : {
                        "description" : "This is the response when the request has been completed successfully.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ManifestDType"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description" : "This is the response when the provider does not support the badge connect API."
                    },
                    "421" : {
                        "description" : "This is the response when the request was not made over secure TLS protocol."
                    },
                    "default" : {
                        "description" : "This is the response when some other error has occured."
                    }
                }
            }
        },
        "/assertions" : {
            "get" : {
                "operationId" : "getAssertions",
                "summary" : "The REST read request message for the getAssertions() API call.",
                "tags" : [ "OBC-Service" ],
                "description" : "Fetch Assertions for the supplied parameters and authentication token.",
                "parameters" : [
                    {
                        "name" : "limit",
                        "in" : "query",
                        "description" : "Indicate how many results should be retrieved in a single page.",
                        "required" : false,
                        "schema" : {
                            "minimum" : 1
                        },
                        "style" : "form",
                        "allowEmptyValue" : false
                    },
                    {
                        "name" : "offset",
                        "in" : "query",
                        "description" : "Indicate the index of the first record to return (zero indexed).",
                        "required" : false,
                        "schema" : {
                            "minimum" : 0
                        },
                        "style" : "form",
                        "allowEmptyValue" : false
                    },
                    {
                        "name" : "since",
                        "in" : "query",
                        "description" : "Retrieve Assertions that were created or updated after the provided timestamp. Must be an ISO 8601 compatible timestamp with a time zone indicator.",
                        "required" : false,
                        "schema" : {
                        },
                        "style" : "form",
                        "allowEmptyValue" : false
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "This is the response when the request has been completed successfully.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "An invalid request was made.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "The request was not correctly authorized.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description" : "The requested resource does not exist.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "405" : {
                        "description" : "This method is not allowed on the endpoint.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description" : "This code should be used only if there is catastrophic error.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Any other response."
                    }
                }
            },
            "post" : {
                "operationId" : "postAssertion",
                "summary" : "The REST update request message for the postAssertion() API call.",
                "tags" : [ "OBC-Service" ],
                "description" : "Create or update an Assertion.",
                "requestBody" : {
                    "description" : "The Assertion to be created or updated. Data MUST be a list exactly one Assertion long.",
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/AssertionDType"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "The Assertion was updated successfully.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "An invalid request was made.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "The request was not correctly authorized.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description" : "The requested resource does not exist.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "405" : {
                        "description" : "This method is not allowed on the endpoint.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description" : "This code should be used only if there is catastrophic error.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Any other response."
                    }
                }
            }
        },
        "/profile" : {
            "get" : {
                "operationId" : "getProfile",
                "summary" : "The REST read request message for the getProfile() API call.",
                "tags" : [ "OBC-Service" ],
                "description" : "Fetch the profile for the supplied authentication token.",
                "responses" : {
                    "200" : {
                        "description" : "This is the response when the request has been completed successfully.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "An invalid request was made.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "The request was not correctly authorized.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description" : "The requested resource does not exist.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "405" : {
                        "description" : "This method is not allowed on the endpoint.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description" : "This code should be used only if there is catastrophic error.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Any other response."
                    }
                }
            },
            "post" : {
                "operationId" : "postProfile",
                "summary" : "The REST update request message for the postProfile() API call.",
                "tags" : [ "OBC-Service" ],
                "description" : "Update the profile for the authenticated user.",
                "requestBody" : {
                    "description" : "The authenticated user's profile.",
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/ProfileDType"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "This is the response when the request has been completed successfully.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "An invalid request was made.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "The request was not correctly authorized.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description" : "The requested resource does not exist.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "405" : {
                        "description" : "This method is not allowed on the endpoint.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResponseEnvelopeDType"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description" : "This code should be used only if there is catastrophic error."
                    },
                    "default" : {
                        "description" : "Any other response."
                    }
                }
            }
        }
    },
    "components" : {
        "securitySchemes" : {
            "OAuth2ACG" : {
                "type" : "oauth2",
                "description" : "",
                "flows" : {
                    "authorizationCode" : {
                        "tokenUrl" : "/token",
                        "authorizationUrl" : "/authorize",
                        "refreshUrl" : "/token",
                        "scopes" : {
                            "https://purl.imsglobal.org/spec/ob/v2p1/scope/assertion.create" : "Permission to create assertions for the authenticated entity.",
                            "https://purl.imsglobal.org/spec/ob/v2p1/scope/assertion.readonly" : "Permission to read assertions for the authenticated entity.",
                            "https://purl.imsglobal.org/spec/ob/v2p1/scope/profile.readonly" : "Permission to read the profile for the authenticated entity.",
                            "https://purl.imsglobal.org/spec/ob/v2p1/scope/profile.update" : "Permission to update the profile for the authenticated entity."
                        }
                    }
                }
            }
        },
        "schemas" : {
            "AssertionDType" : {
                "description" : "Open Badges 2.0 Assertion object.",
                "type" : "object",
                "properties" : {
                    "id" : {
                        "description" : "Model Primitive Datatype = AnyURI. Unique IRI for this object.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "type" : {
                        "description" : "Model Primitive Datatype = String. JSON-LD type for this object.",
                        "type" : "string"
                    }
                },
                "required" : [ "id","type" ],
                "additionalProperties" : true
            },
            "BadgeConnectAPIDType" : {
                "description" : "Configuration information about a single implementation.",
                "type" : "object",
                "properties" : {
                    "id" : {
                        "description" : "Model Primitive Datatype = AnyURI. Unique IRI for the configuration.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "type" : {
                        "description" : "Model Primitive Datatype = AnyURI. JSON-LD type of the configuration object. Defaults to BadgeConnectAPI.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "apiBase" : {
                        "description" : "Model Primitive Datatype = AnyURI. Fully qualified URL that will be concatenated with the API endpoints. It SHOULD NOT have a trailing slash '/'. E.g. apiBase + '/assertions'.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "authorizationUrl" : {
                        "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the host's authorization endpoint.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "image" : {
                        "description" : "Model Primitive Datatype = AnyURI. An image representing the platform. May be a URI to a hosted image or a Data URI.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "name" : {
                        "description" : "Model Primitive Datatype = String. The name of the platform supporting the API. This SHOULD reflect the user-facing identity of the platform requesting authorization.",
                        "type" : "string"
                    },
                    "privacyPolicyUrl" : {
                        "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the platform's privacy policy. Other platforms SHOULD link to this resource as part of their authorization interface.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "registrationUrl" : {
                        "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the host's dynamic client registration endpoint.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "scopesOffered" : {
                        "description" : "Model Primitive Datatype = AnyURI. Applies to Hosts only. An array of strings listing the scopes supported by the Host in the form of fully qualified URLs to the scope descriptors.",
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                            "type" : "string",
                            "format" : "uri"
                        }
                    },
                    "termsOfServiceUrl" : {
                        "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the platform's terms of service. Other platforms SHOULD link to this resource as part of their authorization interface.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "tokenRevocationUrl" : {
                        "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the host's token revocation endpoint.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "tokenUrl" : {
                        "description" : "Model Primitive Datatype = AnyURI. A fully qualified URL to the host's token request endpoint for exchanging an authorization code for a bearer token.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "version" : {
                        "description" : "Model Primitive Datatype = String. A string representing the implemented version. MUST be in the format of vMAJORpMINOR where MAJOR and MINOR are integers.",
                        "type" : "string"
                    }
                },
                "required" : [ "apiBase","authorizationUrl","name","privacyPolicyUrl","registrationUrl","scopesOffered","termsOfServiceUrl","tokenUrl","version" ],
                "additionalProperties" : false
            },
            "ManifestDType" : {
                "description" : "Provider configuration information. A provider may support multiple implementations.",
                "type" : "object",
                "properties" : {
                    "@context" : {
                        "description" : "Model Primitive Datatype = AnyURI. The URL of the JSON-LD @context file for the manifest.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "id" : {
                        "description" : "Model Primitive Datatype = AnyURI. Unique IRI for the manifest.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "type" : {
                        "description" : "Model Primitive Datatype = AnyURI. The JSON-LD type of the manifest. Defaults to Manifest.",
                        "type" : "string",
                        "format" : "uri",
                        "default" : "Manifest"
                    },
                    "badgeConnectAPI" : {
                        "description" : "Set of BadgeConnectAPI configurations.",
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                            "$ref" : "#/components/schemas/BadgeConnectAPIDType"
                        }
                    }
                },
                "required" : [ "@context","id","badgeConnectAPI" ],
                "additionalProperties" : false
            },
            "ProfileDType" : {
                "description" : "Open Badges 2.0 Profile object.",
                "type" : "object",
                "properties" : {
                    "id" : {
                        "description" : "Model Primitive Datatype = AnyURI. Unique IRI for this object.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "type" : {
                        "description" : "Model Primitive Datatype = String. JSON-LD type for this object.",
                        "type" : "string"
                    }
                },
                "required" : [ "id","type" ],
                "additionalProperties" : true
            },
            "ResponseEnvelopeDType" : {
                "description" : "Response payload all APIs in this specification.",
                "type" : "object",
                "properties" : {
                    "status" : {
                        "$ref" : "#/components/schemas/StatusDType"
                    },
                    "results" : {
                        "description" : "An array of Result objects. The array element types are defined by each endpoint.",
                        "type" : "array",
                        "minItems" : 0,
                        "items" : {
                            "$ref" : "#/components/schemas/ResultDType"
                        }
                    }
                },
                "required" : [ "status" ],
                "additionalProperties" : false
            },
            "ResultDType" : {
                "description" : "An element of the results array in the ResponseEnvelope. May be an Open Badges 2.0 Assertion, Open Badges 2.0 Profile, or SignedBadge as defined in this specification.",
                "type" : "object",
                "properties" : {
                    "id" : {
                        "description" : "Model Primitive Datatype = AnyURI. Unique IRI for the object.",
                        "type" : "string",
                        "format" : "uri"
                    },
                    "type" : {
                        "description" : "JSON-LD type for the result. Must be one of Assertion, Profile, or SignedBadge.",
                        "type" : "string",
                        "enum" : [ "Assertion","Profile","SignedBadge" ]
                    }
                },
                "required" : [ "type" ],
                "additionalProperties" : true
            },
            "StatusDType" : {
                "description" : "Response status.",
                "type" : "object",
                "properties" : {
                    "error" : {
                        "description" : "Model Primitive Datatype = String. A nullable string and the human-readable message describing the problem.",
                        "type" : "string"
                    },
                    "statusCode" : {
                        "description" : "Model Primitive Datatype = Integer. The HTTP status code of the response.",
                        "type" : "integer",
                        "format" : "int32"
                    },
                    "statusText" : {
                        "description" : "A string matching one of the enumerated and allowed values for the given endpoint.",
                        "type" : "string",
                        "enum" : [ "OK","REQUEST_VALIDATION_ERROR","RECIPIENT_PROFILE_MISMATCH","INVALID_BADGE","BAD_REQUEST","UNAUTHENTICATED","PERMISSION_DENIED","NOT_FOUND","METHOD_NOT_ALLOWED" ]
                    }
                },
                "required" : [ "statusCode" ],
                "additionalProperties" : false
            }
        }
    }
}
