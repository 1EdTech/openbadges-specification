Package SharedCertification TestModel
	Capability issuer "t:Open Badges Issuer" "A Open Badges Issuer is an application that allows for the creation of OpenBadgeCredentials and the subsequent delivery of OpenBadgeCredentials to recipients that conform to the Open Badges Specification" []
	Capability displayer "t:Open Badges Displayer" "An Open Badges Displayer is an application that displays and verifies badges for viewers" []
	Capability consumer-read "t:Service Consumer read" "A product that conforms to Service Consumer (Read) requirements can request credentials and profiles from a product that conforms to Service Provider (Read) requirements." []
	Capability consumer-write "t:Service Consumer Write" "A product that conforms to Service Consumer (Write) requirements can send an OpenBadgeCredential or a Profile to a product that conforms to Service Provider (Write) requirements." []
    Capability provider-read "t:Service Provider read" "A product that conforms to Service Provider (Read) requirements can provide badges to a product that conforms to Service Consumer (Read) requirements." []
    Capability provider-write "t:Service Provider Write" "A product that conforms to Service Provider (Write) requirements can accept an OpenBadgeCredential or a Profile from a product that conforms to Service Consumer (Write) requirements." []

    Actors [OBIssuer, OBDisplayer, OBHost]

Package IssuerCertification TestModel Certification "t:Open Badges Issuer" "A Open Badges Issuer is an application that allows for the creation of OpenBadgeCredentials and the subsequent delivery of OpenBadgeCredentials to recipients that conform to the Open Badges Specification"
	Capabilities [issuer] true
	Capabilities [consumer-write] false

    Suite issuer true [issuer] "t:Open Badges Issuer" "A Open Badges Issuer is an application that allows for the creation of OpenBadgeCredentials and the subsequent delivery of OpenBadgeCredentials to recipients that conform to the Open Badges Specification. The candidate platform must issue a valid baked badge and demonstrate how the badge is retrieved by the recipient"
        Test issue true manual [certifier] "t:Issue a valid Open Badge" "Create a valid baked 3.0 badge and issue it to the recipient conformance@imsglobal.org and submit the issued badge to the conformance test system."
            Artifact badge [url] "t:Badge" "The uploaded badge must be valid an verifiable"
                Validation ob30 inspector OB30inspector error  "The uploaded badge must be valid against OB30inspector"

            Artifact video [url] "t:Video" "Demonstrate through video the candidate platform's methodology for a recipient to retrieve their badge"
                Validation custom "It must be a valid URI"


    Suite consumer-write true [consumer-write] "t:Open Badges Service Consumer Write" "A product that conforms to Service Consumer (Write) requirements can send an OpenBadgeCredential or a Profile to a product that conforms to Service Provider (Write) requirements."
        Variable registrationUrl URI false "OAuth Dynamic Client Registration url"

        Test registration true automatic "t:Register your client to use the API" "Exchange of endpoint information and client registration"
			ServiceCall discovery getServiceDescription provider OBIssuer OBHost 200 ""

            Message registration OBIssuer OBHost request false "${registrationUrl}" POST "OAuth Dynamic Client Registration"
                Validation custom ""

        Test setup true automatic "t:Endpoint and OAuth registration for consumer calls" "Obtain an access token from the conformance test system following OAuth 2.0 authentication flow with the provided login credentials. Ensure that the right scopes are sent."
			AuthToken consumerToken "${TokenURL}" provider "The tool has acquired an access token from the conformance test system using certification platform's access_token_url. Ensure that the right scopes are sent."
				Scopes [upsertCredentialAcg, putProfileAcg]

            Message authorization OBIssuer OBHost request true "${AuthURL}" GET "OAuth 2.0 Authorization"

        Test upsertCredentials true automatic "t:Endpoint for sending a credential" "A product that conforms to Service Consumer (Write) requirements can send an OpenBadgeCredential to a product that conforms to Service Provider (Write) requirements"
			ServiceCall main upsertCredential provider OBIssuer OBHost 200 "Create a valid AchivementCredential and issue it to the recipient conformance@imsglobal.org. Call the conformance test endpoint upsertCredentials, with the AchivementCredential."
                Validation upsertCredential schema AchievementCredential

        Test putProfile true automatic "t:Endpoint for sending a profile" "A product that conforms to Service Consumer (Write) requirements can send a Profile to a product that conforms to Service Provider (Write) requirements"
			ServiceCall main putProfile provider OBIssuer OBHost 200 "Create a new Profile for the id \"https://1edtech.org/issuers/cert\" and call the conformance test endpoint putProfile with the Profile."
                Validation putProfile schema Profile

Package DisplayerCertification TestModel Certification "t:Open Badges Displayer" "An Open Badges Displayer is an application that displays and verifies badges for viewers"
	Capabilities [displayer] true

    Suite displayer true [displayer] "t:Open Badges Displayer" "An Open Badges Displayer is an application that displays and verifies badges for viewers. The candidate platform must support viewer-initiated verification of a badge."
        Test displayer true manual [certifier] "t:Display of a badge" "The candidate platform must verify these badges and submit the status in the conformance test system. Among these badges there should be a valid one, an expired one and a revoked one."
            Artifact first-video [url] "t:Video of first badge" "Demonstrate through separate video that the platform allows viewers of badges to see the following data in provided badge."
                Validation custom "It must be a valid URI"

            Artifact second-video [url] "t:Video of second badge" "Demonstrate through separate video that the platform allows viewers of badges to see the following data in provided badge."
                Validation custom "It must be a valid URI"

            Artifact third-video [url] "t:Video of third badge" "Demonstrate through separate video that the platform allows viewers of badges to see the following data in provided badge."
                Validation custom "It must be a valid URI"

Package HostCertification TestModel Certification "t:Host Service Conformance" "An Open Badges Host is an application that can aggregate and publicly host OpenBadgeCredential for recipients. It also supports export of badges at user request."
	Capabilities [consumer-read, provider-read, provider-write] true

    Suite consumer-read [consumer-read] "t:" "Service Consumer Read" "A product that conforms to Service Consumer (Read) requirements can request credentials and profiles from a product that conforms to Service Provider (Read) requirements."
        Variable registrationUrl URI false "OAuth Dynamic Client Registration url"
        Variable limit PositiveInteger false "The maximum number of OpenBadgeCredentials to return per page."
        Variable offset NonNegativeInteger "The index of the first AchievementCredential to return. (zero indexed)"
        Variable since DateTime "Only include OpenBadgeCredentials issued after this timestamp."

        Test registration true automatic "t:Register your client to use the API" "Exchange of endpoint information and client registration"
			ServiceCall discovery getServiceDescription provider OBIssuer OBHost 200 ""

            Message registration OBHost OBHost request false "${registrationUrl}" POST "OAuth Dynamic Client Registration"
                Validation custom ""

        Test setup true automatic "t:Endpoint and OAuth registration for consumer calls" "Obtain an access token from the conformance test system following OAuth 2.0 authentication flow with the provided login credentials. Ensure that the right scopes are sent."
			AuthToken providerToken "${TokenURL}" provider "The tool has acquired an access token from the conformance test system using certification platform's access_token_url. Ensure that the right scopes are sent."
				Scopes [getCredentialsAcg, getProfileAcg]

            Message authorization OBHost OBHost request true "${AuthURL}" GET "OAuth 2.0 Authorization"

        Test getCredentials true automatic "t:Consumer call to getCredentials" "A product that conforms to Service Consumer (Read) requirements can request credentials from a product that conforms to Service Provider (Read) requirements."
			ServiceCall main getCredentials provider OBHost OBHost 200 "Call the conformance test endpoint getCredentials."

        Test getCredentials-query-parameters true automatic "t:Consumer call to getCredentials with filter and query" "A product that conforms to Service Consumer (Read) requirements can request credentials from a product that conforms to Service Provider (Read) requirements."
			ServiceCall main getCredentials provider OBIssuer OBHost 200 "Call the conformance test endpoint getCredentials."
                Query limit "${limit}" "The maximum number of OpenBadgeCredentials to return per page."
                Query offset "${offset}" "The index of the first AchievementCredential to return. (zero indexed)"
                Query since "${since}" "Only include OpenBadgeCredentials issued after this timestamp."

        Test getProfile true automatic "t:Consumer call to getProfile" "A product that conforms to Service Consumer (Read) requirements can request profile from a product that conforms to Service Provider (Read) requirements."
			ServiceCall main getProfile provider OBHost OBHost 200 "Call the conformance test endpoint getProfile"

    Suite provider [provider-read, provided-write] "t:Service Provider" ""
        Variable apiBaseUrl URI true "Base Path of your API endpoints. It MUST end in /ims/ob/v3p0"
            Validation custom "It must be a valid URI"

        Variable registrationUrl URI false "OAuth Dynamic Client Registration url"
        Variable scopes String false "Scopes provided by the OAuth provider"
        Variable limit PositiveInteger false "The maximum number of OpenBadgeCredentials to return per page."
        Variable offset NonNegativeInteger "The index of the first AchievementCredential to return. (zero indexed)"
        Variable since DateTime "Only include OpenBadgeCredentials issued after this timestamp."

        Test registration true automatic "t:OAuth client registration" "Registration of a client for making API calls"
			ServiceCall discovery getServiceDescription consumer OBHost OBHost 200 ""

            Message registration OBHost OBHost request false "${registrationUrl}" POST "OAuth Dynamic Client Registration"
                Validation custom ""

        Test setup true automatic "t:OAuth authorization flow for provider calls" "Exchange of endpoint information and OAuth tokens"
			AuthToken consumerToken "${TokenURL}" consumer "Authorize the conformance test system with the provided login credentials. Ensure that the right scopes are sent back to the conformance test system."
				Scopes ["${scopes}"]

            Message authorization OBHost OBHost request true "${AuthURL}" GET "OAuth 2.0 Authorization"

        Test getCredentials true automatic "t:Provider call to getCredentials" "A product that conforms to Service Provider (Read) requirements can provide badges to a product that conforms to Service Consumer (Read) requirements."
			ServiceCall main getCredentials consumer OBHost OBHost 200 "Expect a call to your getCredentials endpoint. Return valid AchivementCredentials. Each element in the list MUST be verifiable."
                Validation getCredentials schema GetOpenBadgeCredentialsResponse

        Test getCredentials-query-parameters true automatic "t:Provider call to getCredentials with filter and query" "A product that conforms to Service Provider (Read) requirements can provide badges to a product that conforms to Service Consumer (Read) requirements."
			ServiceCall main getCredentials consumer OBHost OBHost 200 "Expect a call to your getCredentials endpoint. Return valid AchivementCredentials. Each element in the list MUST be verifiable."
                Query limit "${limit}" "The maximum number of OpenBadgeCredentials to return per page."
                Query offset "${offset}" "The index of the first AchievementCredential to return. (zero indexed)"
                Query since "${since}" "Only include OpenBadgeCredentials issued after this timestamp."
                Validation getCredentials schema GetOpenBadgeCredentialsResponse

        Test getProfile true automatic "t:Provider call to getProfile" "A product that conforms to Service Provider (Read) requirements can provide profile to a product that conforms to Service Consumer (Read) requirements."
			ServiceCall main getProfile provider OBHost OBHost 200 "Expect a call to your getProfile"
                Validation getProfile schema Profile

        Test upsertCredentials true automatic "t:Provider call to upsertCredentials" "A product that conforms to Service Provider (Write) requirements can accept an OpenBadgeCredential from a product that conforms to Service Consumer (Write) requirements."
            ValidationList response
                Validation json schema AchievementCredential
                Validation jws schema CompactJws

			ServiceCall main upsertCredentials consumer OBHost OBHost 200 "Expect a call to your upsertCredentials endpoint. Return a valid AchivementCredential."
                Validations response

        Test putProfile true automatic "t:Provider call to putProfile" "A product that conforms to Service Provider (Write) requirements can accept a Profile from a product that conforms to Service Consumer (Write) requirements."
			ServiceCall main putProfile provider OBHost OBHost 200 "Expect a call to your getProfile"
                Validation putProfile schema Profile
