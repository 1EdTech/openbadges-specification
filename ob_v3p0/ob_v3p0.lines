
Model ob_psm org.imsglobal.model.ob.v3p0 ob 2021-11-19 3.0 "s:IMS Base Document" "t:Open Badges" "r:IMS Project Group" "d:Open Badges are visual symbols of accomplishments packed with verifiable metadata according to the Open Badges specification. The Open Badges specification defines the properties necessary to define an achievement and award it to a recipient, as well as procedures for verifying badge authenticity and “baking” badge information into portable image files. It includes term definitions for representations of data in Open Badges."

Package DataModel
	Class Assertion Unordered false false [] 					"d:Assertions are representations of an awarded badge, used to share information about a badge belonging to one earner."
//		Property id	IRI	1 null null 							"d:Unique IRI for the Assertion. If using hosted verification, this should be the URI where the assertion is accessible. For signed Assertions, it is recommended to use a UUID in the urn:uuid namespace."
		Property type String 1 null "v:Assertion"				"d:A valid representation of the Assertion type. In most cases, this will simply be the string Assertion."
		Property recipient IdentityObject 1 null null 			"d:The recipient of the achievement."
		Property badge BadgeClass 1 null null 					"d:The type of badge being awarded."
		Property verification VerificationObject 1 null null 	"d:Instructions for third parties to verify this assertion."
		Property issuedOn DateTime 1 null null 					"d:Timestamp of when the achievement was awarded."
		Property image Image 0..1 null null 					"d:An image representing this user’s achievement. This must be a PNG or SVG image, and should be prepared via the Baking specification. An ‘unbaked’ image for the badge is defined in the BadgeClass and should not be duplicated here."
		Property evidence Evidence 0..* null null 				"d:A description of the work that the recipient did to earn the achievement. This can be a page that links out to other pages if linking directly to the work is infeasible."
		Property narrative String 0..1 null null 				"d:A narrative that connects multiple pieces of evidence. Likely only present at this location if evidence is a multi-value array."
		Property expires DateTime 0..1 null null 				"d:If the achievement has some notion of expiry, this indicates a timestamp when a badge should no longer be considered valid. After this time, the badge should be considered expired."
		Property revoked Boolean 0..1 null null 				"d:Defaults to false if Assertion is not referenced from a revokedAssertions list and may be omitted. See RevocationList. If revoked is true, only revoked and id are required properties, and many issuers strip a hosted Assertion down to only those properties when revoked."
		Property revocationReason String 0..1 null null 		"d:Optional published reason for revocation, if revoked."
		Property extensions Namespace 0..1 null null	
	Class BadgeClass Unordered false false []					"d:A collection of information about the accomplishment recognized by the Open Badge. Many assertions may be created corresponding to one BadgeClass."
//		Property id	IRI	1 null null 							"d:Unique IRI for the BadgeClass. Most platforms to date can only handle HTTP-based IRIs. Issuers using signed assertions are encouraged to publish BadgeClasses using HTTP IRIs but may instead use ephemeral BadgeClasses that use an id in another scheme such as urn:uuid."
		Property type String 1 null "v:BadgeClass"				"d:Valid representation of the BadgeClass type. In most cases, this will simply be the string BadgeClass."
		Property name String 1 null null 						"d:The name of the achievement."
		Property description String 1 null null 				"d:A short description of the achievement."
		Property image Image 1 null null 						"d:An image of the achievement. This must be a PNG or SVG image."
		Property criteria Criteria 1 null null 					"d:Criteria document describing how to earn the achievement."
		Property issuer Issuer 1 null null 						"d:A description of the individual, entity, or organization that issued the badge."
		Property alignment AlignmentObject 0..* null null 		"d:An object describing which objectives or educational standards this badge aligns to, if any."
		Property tags String 0..* null null 					"d:A tag that describes the type of achievement."
//TODO which other classes are related, version and endorsement on?
		Property related String 0..* null null					"d:Identifies a related version of the entity."
		Property version String 0..1 null null					"d:The version identifier for the present edition of the entity."
		Property endorsement Endorsement 0..* null null			"d:A claim made about this entity. Note: As endorsements must be published after the publication of the entity they endorse, it will not always be possible to establish a two-way linkage with this property."		
		Property extensions Namespace 0..1 null null 
	Class Profile Unordered false false []						"d:A Profile is a collection of information that describes the entity or organization using Open Badges. Issuers must be represented as Profiles, and recipients, endorsers, or other entities may also be represented using this vocabulary. Each Profile that represents an Issuer may be referenced in many BadgeClasses that it has defined. Anyone can create and host an Issuer file to start issuing Open Badges. Issuers may also serve as recipients of Open Badges, often identified within an Assertion by specific properties, like their url or contact email address."
//		Property id	IRI	1 null null 							"d:Unique IRI for the Issuer/Profile file. Most platforms to date can only handle HTTP-based IRIs."		
		Property type String 1 null "v:Profile"					"d:Valid representation of Profile type. In most cases, this will simply be the string Profile."
		Property name String 0..1 null null						"d:The name of the entity or organization."
		Property url IRI 0..1 null null							"d:The homepage or social media profile of the entity, whether individual or institutional. Should be a URL/URI Accessible via HTTP."
		Property telephone String 0..1 null null				"d:A phone number for the entity. For maximum compatibility, the value should be expressed as a + and country code followed by the number with no spaces or other punctuation, like +16175551212 (E.164 format)."
		Property description String	0..1 null null				"d:A short description of the issuer entity or organization."
		Property image Image 0..1 null null						"d:An image representing the issuer. This must be a PNG or SVG image."
		Property email String 0..1 null null					"d:Contact address for the individual or organization."
		Property publicKey CryptographicKey 0..1 null null		"d:The key(s) an issuer uses to sign Assertions."
		Property verification VerificationObject 0..1 null null	"d:Instructions for how to verify Assertions published by this Profile."
		Property revocationList	RevocationList 0..1 null null	"d:HTTP URI of the Badge Revocation List used for marking revocation of signed badges."
		Property extensions Namespace 0..1 null null
	Class Issuer Unordered false false [Profile] 				"d:An Issuer Profile is a subclass of the general Profile with some additional requirements."
		Property type String 1 null "v:Issuer"					"d:Valid representation of Issuer type. In most cases, this will simply be the string Issuer."		
		Property name String 1 null null						"d:The name of the entity or organization."
		Property url IRI 1 null null							"d:The homepage or social media profile of the entity, whether individual or institutional. Should be a URL/URI Accessible via HTTP."
		Property email String 1 null null						"d:Contact address for the individual or organization."
	Class IdentityObject Unordered false false []				"d:A collection of information about the recipient of a badge."
		Property identity String 1 null null					"d:Either the hash of the identity or the plaintext value. If it’s possible that the plaintext transmission and storage of the identity value would leak personally identifiable information where there is an expectation of privacy, it is strongly recommended that an IdentityHash be used."
		Property type IdentityType 1 null null					"d:The property by which the recipient of a badge is identified. This value should be an IRI mapped in the present context. For example, email maps to http://schema.org/email and indicates that the identity of the IdentityObject will represent a value of a Profile’s email property. Currently the only supported value for many platforms that implement Open Badges is email, but other properties are available. See Profile Identifier Properties.
		Property hashed	Boolean	1 null null						"d:Whether or not the identity value is hashed."
		Property salt String 0..1 null null						"d:If the recipient is hashed, this should contain the string used to salt the hash. If this value is not provided, it should be assumed that the hash was not salted."		
		Property extensions Namespace 0..1 null null
	Class IdentityType Selection false false []
		Property email String 1 null "v:email"
		Property url String 1 null "v:url"
		Property telephone String 1 null "v:telephone"
	Class VerificationObject Unordered false false []			"d:A collection of information allowing an inspector to verify an Assertion. This is used as part of verification instructions in each Assertion but also as an instruction set in an issuer’s Profile to describe verification instructions for Assertions the issuer awards."
		Property type String 1 null "v:VerificationObject" 		"d:The type of verification method. Supported values for single assertion verification are HostedBadge and SignedBadge (aliases in context are available: hosted and signed). For instances used in Profiles, the type VerificationObject should be used."		
		Property verificationProperty IRI 0..1 null null		"d:The @id of the property to be used for verification that an Assertion is within the allowed scope. Only id is supported. Verifiers will consider id the default value if verificationProperty is omitted or if an issuer Profile has no explicit verification instructions, so it may be safely omitted."
		Property startsWith	URI 0..1 null null					"d:The URI fragment that the verification property must start with. Valid Assertions must have an id within this scope. Multiple values allowed, and Assertions will be considered valid if their id starts with one of these values."
		Property allowedOrigins	URI 0..* null null				"d:The host registered name subcomponent of an allowed origin. Any given id URI will be considered valid."	
		Property extensions Namespace 0..1 null null
	Class HostedBadge Unordered false false [VerificationObject] "d:Hosted badge Assertions that have an HTTP(s) id simply need to declare a verification type of HostedBadge, and verification will use the Assertion’s id property."
		Property type String 1 null "v:HostedBadge"
	Class SignedBadge Unordered false false [VerificationObject] "d:Cryptographically signed Assertions need to declare a verification type of SignedBadge within the JSON-LD. These badges are typically delivered as JSON Web Signatures (JWSs), so the signature value is outside the Assertion content, wrapping it. However, it may help to identify which publicKey is associated with the signature within the badge, so the creator field is available to be used in SignedBadges."
 		Property type String 1 null "v:SignedBadge" 
		Property creator CryptographicKey 0..1 null null		"d:The (HTTP) id of the key used to sign the Assertion. If not present, verifiers will check public key(s) declared in the referenced issuer Profile. If a key is declared here, it must be authorized in the issuer Profile as well. creator is expected to be the dereferencable URI of a document that describes a CryptographicKey."	
	Class Evidence Unordered false false []						"d:Descriptive metadata about evidence related to the issuance of an Assertion. Each instance of the Evidence class present in an Assertion corresponds to one entity, though a single entry can describe a set of items collectively. There may be multiple evidence entries referenced from an Assertion. The narrative property is also in scope of the Assertion class to provide an overall description of the achievement related to the badge in rich text. It is used here to provide a narrative of achievement of the specific entity described. If both the description and narrative properties are present, displayers can assume the narrative value goes into more detail and is not simply a recapitulation of description."	
		Property type String 1 null "v:Evidence"				"d:Defaults to Evidence."
		Property id	IRI 0..1 null null							"d:The URI of a webpage presenting evidence of achievement."
		Property narrative String 0..1 null null				"d:A narrative that describes the evidence and process of achievement that led to an Assertion."
		Property name String 0..1 null null						"d:A descriptive title of the evidence."
		Property description String 0..1 null null 				"d:A longer description of the evidence."
		Property genre String 0..1 null null 					"d:A string that describes the type of evidence. For example, Poetry, Prose, Film."
		Property audience String 0..1 null null 				"d:A description of the intended audience for a piece of evidence."
		Property extensions Namespace 0..1 null null
	Class Image Unordered false false []						"d:Metadata about images that represent Assertions, BadgeClasses or Profiles. These properties can typically be represented as just the id string of the image, but using a fleshed-out document allows for including captions and other applicable metadata."
		Property id	IRI	1 null null								"d:The URI or Data URI of the image."
		Property type String 1 null "v:Image"					"d:Defaults to schema:ImageObject."		
		Property caption String 0..1 null null					"d:The caption for the image."
		Property author	Profile 0..1 null null 					"d:The author of the image, if desired."
		Property extensions Namespace 0..1 null null
	Class Criteria Unordered false false []						"d:Descriptive metadata about the achievements necessary to be recognized with an Assertion of a particular BadgeClass. This data is added to the BadgeClass so that it may be rendered when that BadgeClass is displayed, instead of simply a link to human-readable criteria external to the badge. Embedding criteria allows either enhancement of an external criteria page or increased portability and ease of use by allowing issuers to skip hosting the formerly-required external criteria page altogether. Criteria is used to allow would-be recipients to learn what is required of them to be recognized with an Assertion of a particular BadgeClass. It is also used after the Assertion is awarded to a recipient to let those inspecting earned badges know the general requirements that the recipients met in order to earn it."
		Property id	IRI	0..1 null null							"d:The URI of a webpage that describes in a human-readable format the criteria for the BadgeClass."
		Property type String 1 null "v:Criteria"				"d:Defaults to Criteria."		
		Property narrative String 0..1 null null				"d:A narrative of what is needed to earn the badge."
		Property extensions Namespace 0..1 null null
	Class AlignmentObject Unordered false false []				"d:The AlignmentObject is an alias for schema.org’s AlignmentObject and uses IRIs from that vocabulary."
		Property targetName	String 1 null null					"d:Name of the alignment."
		Property targetUrl	URL 1 null null						"d:URL linking to the official description of the alignment target, for example an individual standard within an educational framework."
		Property targetDescription String 0..1 null null		"d:Short description of the alignment target."
		Property targetFramework String	0..1 null null 			"d:Name of the framework the alignment target."
		Property targetCode String 0..1 null null				"d:If applicable, a locally unique string identifier that identifies the alignment target within its framework and/or targetUrl."
		Property extensions Namespace 0..1 null null
	Class RevocationList Unordered false false []				"d:The Revocation List is a document that describes badges an Issuer has revoked that used the signed verification method. If you find the badge in the revokedAssertions list, it has been revoked."
//		Property id	IRI	0..1 null null 							"d:The id of the RevocationList."
		Property type String 1 null "v:RevocationList"			"d:Defaults to RevocationList"
		Property issuer	Profile 0..1 null null 					"d:The id of the Issuer."
		Property revokedAssertions Assertion 1..* null null		"d:A string id or UID-based identification of a badge object that has been revoked."
		Property extensions Namespace 0..1 null null
	Class CryptographicKey Unordered false false []				"d:Alias for the Key class from the W3C Web Payments Community Group Security Vocabulary. A CryptographicKey document identifies and describes a Key used for signing Open Badges documents."
//		Property id	IRI	0..1 null null 							"d:The identifier for the key. Most platforms only support HTTP(s) identifiers."
		Property owner Profile	0..1 null null 					"d:The identifier for the Profile that owns this key. There should be a two-way connection between this Profile and the CryptographicKey through the owner and publicKey properties."
		Property publicKeyPem String 0..1 null null 			"d:The PEM key encoding is a widely-used method to express public keys, compatible with almost every Secure Sockets Layer library implementation."
		Property extensions Namespace 0..1 null null
	Class Endorsement Unordered false false []					"d:Open Badges are trustworthy records of achievement. The vocabulary defined above, combined with the validation and verification procedures for badge Assertions, establish Open Badges as a reliable method for expressing and verifying achievements online. However, these procedures don’t answer questions like, “Who trusts this BadgeClass to be a good certification of the competency it describes?” or, “Is this Profile’s email address verified?” For these questions, there is Endorsement."
		Property id	IRI	1 null null 							"d:Unique IRI for the Endorsement instance. If using hosted verification, this should be the URI where the assertion of endorsement is accessible. For signed Assertions, it is recommended to use a UUID in the urn:uuid namespace."
		Property claim IRI 1 null null							"d:An entity, identified by an id and additional properties that the endorser would like to claim about that entity."
		Property issuer	Profile  1 null null					"d:The profile of the Endorsement’s issuer."
		Property issuedOn DateTime 1 null null					"d:Timestamp of when the endorsement was published."
		Property verification VerificationObject 1 null null	"d:Instructions for third parties to verify this assertion of endorsement."
		Property endorsementComment String 0..1 null null		"d:Allows endorsers to make a simple claim in writing about the entity."
		Property extensions Namespace 0..1 null null		
Package PrimitiveTypes 
	Classes [String, Boolean, DateTime, AnyURI, Namespace] PrimitiveType []

Package DerivedTypes 	
	Classes [IRI, URL, URI] DerivedType [AnyURI]

		