Model ob 2022-01-01 3.0 "s:IMS Base Document" "t:Open Badges" "d:Open Badges Data Model 3.0"

Package OpenBadges DataModel

	Class Achievement Unordered false []				"d:A collection of information about the accomplishment recognized by the Assertion. Many assertions may be created corresponding to one Achievement."
		Property id	URI	1  								"d:Unique URI for the Achievement. Most platforms to date can only handle HTTP-based IRIs. Issuers using signed assertions are encouraged to publish BadgeClasses using HTTP IRIs but may instead use ephemeral BadgeClasses that use an id in another scheme such as urn:uuid."
		Property type URI 1 "v:Achievement"				"d:Valid representation of the Achievement type. In most cases, this will simply be the string Achievement."
		Property achievementType AchievementType 0..1	"[ED: from CLR 1.0]"
		Property creator Creator 1 						"q:TBD"
		Property name String 1  						"d:The name of the achievement."
		Property description String 1  					"d:A short description of the achievement."
		Property image Image 0..1  						"d:An image of the achievement. This must be a PNG or SVG image."
		Property criteria Criteria 1  					"d:Criteria document describing how to earn the achievement."
		Property alignment Alignment 0..*  		        "d:An object describing which objectives or educational standards this badge aligns to, if any."
		Property tags String 0..*  						"d:A tag that describes the type of achievement."
		Property endorsement Endorsement 0..* 			"d:A claim made about this entity. Note: As endorsements must be published after the publication of the entity they endorse, it will not always be possible to establish a two-way linkage with this property."		
		Property extensions Namespace 0..1  

	Class Address Unordered false []					"n:From [[CLR-10]]." "Address is an alias for [[schema-org]] Address."
		Property id URI 0..1
		Property type URI 0..1
		Property addressCountry String 0..1				"The country. For example, USA. You can also provide the two-letter [[ISO3166-1]] alpha-2 country code."
		Property addressLocality String 0..1			"The locality. For example, Mountain View."
		Property addressRegion String 0..1				"The region. For example, CA."
		Property postalCode String 0..1					"The postal code. For example, 94043."
		Property postOfficeBoxNumber String 0..1		"The post office box number for PO box addresses."
		Property streetAddress String 0..1				"The street address. For example, 1600 Amphitheatre Pkwy."
		Property extensions Namespace 0..1  

	Class Alignment Unordered false []					"d:Alignment is an alias for [[schema-org]] AlignmentObject and uses IRIs from that vocabulary."
		Property id	URI 0..1 							"d:The URI of a webpage presenting evidence of achievement."
		Property type URI 0..1
		Property targetCode String 0..1 				"d:If applicable, a locally unique string identifier that identifies the alignment target within its framework and/or targetUrl."
		Property targetDescription String 0..1 			"d:Short description of the alignment target."
		Property targetName	String 1 					"d:Name of the alignment."
		Property targetFramework String	0..1  			"d:Name of the framework the alignment target."
		Property targetType TargetType 0..1 			"n:From [[CLR-10]]." "The type of the alignment target node."
		Property targetUrl	URL 1 						"d:URL linking to the official description of the alignment target, for example an individual standard within an educational framework."
		Property extensions Namespace 0..1 

	Class Artifact Unordered false []					"n:From [[CLR-10]]." "An artifact that is part of an evidence object."
		Property type URI 0..1
		Property description String 0..1				"A description of the artifact."
		Property name String 0..1						"The name of the artifact."
		Property url URI 0..1							"URI for the artifact which may be a Data URI ([[RFC2397]]) or the URL where the artifact can be found."
		Property extensions Namespace 0..1 

	Class Creator Unordered false []					"q:TBD"
		Property extensions Namespace 0..1  

	Class CredentialSchema Unordered false []			"Identify the type and location of a data schema."
		Property id URI 1								"The value MUST be a URI identifying the schema file. One instance of `CredentialSchema` MUST have an `id` that is the URL of the JSON Schema for this credential defined by this specification."
		Property type URI 1								"The value MUST identify the type of data schema validation. One instance of `CredentialSchema` MUST have a `type` of `JsonSchemaValidator2020`. [[json-schema-2020-12]]"

	Class CredentialStatus Unordered false []			"The information in CredentialStatus is used to discover information about the current status of a verifiable credential, such as whether it is suspended or revoked. [[vc-data-model]]"
		Property id URI 1
		Property type URI 1								"Expresses the credential status type (also referred to as the credential status method). It is expected that the value will provide enough information to determine the current status of the credential. For example, the object could contain a link to an external document noting whether or not the credential is suspended or revoked. [[vc-data-model]]"
		Property extensions Namespace 0..1 

	Class CredentialSubject Unordered false []			"A collection of information about the recipient of a badge."
		Property id URI 1
		Property achievement Achievement 0..1			"The achievement being awarded."
		Property evidence Evidence 0..*  				"A description of the work that the recipient did to earn the achievement. This can be a page that links out to other pages if linking directly to the work is infeasible."
		Property result Result 0..*						"The set of results being asserted."
		Property extensions Namespace 0..1 

	Class Criteria Unordered false []					"Descriptive metadata about the achievements necessary to be recognized with an Assertion of a particular BadgeClass. This data is added to the BadgeClass so that it may be rendered when that BadgeClass is displayed, instead of simply a link to human-readable criteria external to the badge. Embedding criteria allows either enhancement of an external criteria page or increased portability and ease of use by allowing issuers to skip hosting the formerly-required external criteria page altogether. Criteria is used to allow would-be recipients to learn what is required of them to be recognized with an Assertion of a particular BadgeClass. It is also used after the Assertion is awarded to a recipient to let those inspecting earned badges know the general requirements that the recipients met in order to earn it."
		Property id	URI	0..1 							"The URI of a webpage that describes in a human-readable format the criteria for the BadgeClass."
		Property type URI 1	"v:Criteria"				"Defaults to Criteria."		
		Property narrative Markdown 0..1 				"A narrative of what is needed to earn the badge."
		Property extensions Namespace 0..1 

	Class Endorsement Unordered false []				"Open Badges are trustworthy records of achievement. The vocabulary defined above, combined with the validation and verification procedures for badge Assertions, establish Open Badges as a reliable method for expressing and verifying achievements online. However, these procedures don’t answer questions like, “Who trusts this BadgeClass to be a good certification of the competency it describes?” or, “Is this Profile’s email address verified?” For these questions, there is Endorsement."
		Property id	URI	1  								"Unique URI for the Endorsement instance. If using hosted verification, this should be the URI where the assertion of endorsement is accessible. For signed Assertions, it is recommended to use a UUID in the urn:uuid namespace."
		Property claim URI 1 							"An entity, identified by an id and additional properties that the endorser would like to claim about that entity."
		Property issuer	Profile  1 						"The profile of the Endorsement’s issuer."
		Property issuedOn DateTime 1 					"Timestamp of when the endorsement was published."
		Property endorsementComment String 0..1 		"Allows endorsers to make a simple claim in writing about the entity."
		Property extensions Namespace 0..1 		

	Class Evidence Unordered false []					"d:Descriptive metadata about evidence related to the issuance of an Assertion. Each instance of the Evidence class present in an Assertion corresponds to one entity, though a single entry can describe a set of items collectively. There may be multiple evidence entries referenced from an Assertion. The narrative property is also in scope of the Assertion class to provide an overall description of the achievement related to the badge in rich text. It is used here to provide a narrative of achievement of the specific entity described. If both the description and narrative properties are present, displayers can assume the narrative value goes into more detail and is not simply a recapitulation of description."	
		Property id	URI 0..1 							"d:The URI of a webpage presenting evidence of achievement."
		Property type URI 1 "v:Evidence"				"d:Defaults to Evidence."
		Property narrative Markdown 0..1 				"d:A narrative that describes the evidence and process of achievement that led to an Assertion."
		Property name String 0..1 						"d:A descriptive title of the evidence."
		Property description String 0..1  				"d:A longer description of the evidence."
		Property genre String 0..1  					"d:A string that describes the type of evidence. For example, Poetry, Prose, Film."
		Property audience String 0..1  					"d:A description of the intended audience for a piece of evidence."
		Property artifacts Artifact 0..*				"n:From [[CLR-10]]." "Artifacts that are part of the evidence."
		Property extensions Namespace 0..1 

	Class Image Unordered false []						"Metadata about images that represent Assertions, BadgeClasses or Profiles. These properties can typically be represented as just the id string of the image, but using a fleshed-out document allows for including captions and other applicable metadata."
		Property id	URI	1 								"The URI or Data URI of the image."
		Property type URI 1 "v:Image"					"Defaults to schema:ImageObject."		
		Property caption String 0..1 					"The caption for the image."
		Property author	Profile 0..1  					"The author of the image, if desired."
		Property extensions Namespace 0..1 

	Class Profile Unordered false []					"d:A Profile is a collection of information that describes the entity or organization using Open Badges. Issuers must be represented as Profiles, and recipients, endorsers, or other entities may also be represented using this vocabulary. Each Profile that represents an Issuer may be referenced in many BadgeClasses that it has defined. Anyone can create and host an Issuer file to start issuing Open Badges. Issuers may also serve as recipients of Open Badges, often identified within an Assertion by specific properties, like their url or contact email address."
		Property id	URI	1  								"d:Unique URI for the Issuer/Profile file. Most platforms to date can only handle HTTP-based IRIs."		
		Property type URI 1 "v:Profile"					"d:Valid representation of Profile type. In most cases, this will simply be the string Profile."
		Property name String 0..1 						"d:The name of the entity or organization."
		Property url URI 0..1 							"d:The homepage or social media profile of the entity, whether individual or institutional. Should be a URL/URI Accessible via HTTP."
		Property telephone String 0..1 					"d:A phone number for the entity. For maximum compatibility, the value should be expressed as a + and country code followed by the number with no spaces or other punctuation, like +16175551212 (E.164 format)."
		Property description String	0..1 				"d:A short description of the issuer entity or organization."
		Property image Image 0..1 						"d:An image representing the issuer. This must be a PNG or SVG image."
		Property email String 0..1 						"d:Contact address for the individual or organization."
		Property address Address 0..1					"n:From [[CLR-10]]." "An address for the individual or organization."
		Property additionalName String 0..1				"n:From [[CLR-10]]." "An additional name for a person, can be used for a middle name."
		Property birthDate Date 0..1					"n:From [[CLR-10]]." "Birthdate of the person."
		Property endorsements Endorsement 0..*			"n:From [[CLR-10]]." "Allows endorsers to make specific claims about the individual or organization represented by this profile."
		Property familyName String 0..1					"n:From [[CLR-10]]." "Family name of a person. In the U.S., the last name of a person."
		Property givenName String 0..1					"n:From [[CLR-10]]." "Given name of a person. In the U.S., the first name of a person."
		Property identifiers SystemIdentifier 0..*		"n:From [[CLR-10]]." "A set of System Identifiers that represent other identifiers for this Profile."
		Property official String 0..1					"n:From [[CLR-10]]." "The name of the authorized official for the Issuer."
		Property parentOrg Profile 0..1					"n:From [[CLR-10]]." "The parent organization of the person or organization represented by this organization."
		Property sourcedId String 0..1					"n:From [[CLR-10]]." "The individual's or organization's unique 'sourcedId' value, which is used for providing interoperability with other identity systems."
		Property studentId String 0..1					"n:From [[CLR-10]]." "An institution's student identifier for the person. This is frequently issued through a Student Information System."
		Property extensions Namespace 0..1

	Class Proof Unordered false []						"A JSON-LD Linked Data proof. [[DATA-INTEGRITY]]"
		Property type String 1							"Linked Data Signature Suite used to produce proof."
		Property created DateTime 1						"Date the proof was created."
		Property challenge String 0..1					"q:Not used with assertionMethod?" "A value chosen by the verifier to mitigate authentication proof replay attacks."
		Property domain String 0..1						"q:Not used with assertionMethod?" "The domain of the proof to restrict its use to a particular target."
		Property jws String 0..1						"Detached JSON Web Signature."
		Property nonce String 0..1						"A value chosen by the creator of proof to randomize proof values for privacy purposes."
		Property proofPurpose String 1 					"v:assertionMethod" "The purpose of the proof to be used with `verificationMethod`. MUST be 'assertionMethod'."
		Property proofValue String 1					"Value of the Linked Data proof."
		Property verificationMethod String 1..*			"q:Array? Key/Value pairs?" "A set of parameters required to independently verify the proof, such as an identifier for a public/private key pair that would be used in the proof."
		Property extensions Namespace 0..1 

	Class Result Unordered false []						"[ED: from CLR 1.0]"
		Property id URI 0..1
		Property type URI 0..1
		Property achievedLevel URI 0..1
		Property resultDescription URI 1
		Property status ResultStatusType 0..1
		Property value String 0..1
		Property extensions Namespace 0..1 

	Class ResultDescription Unordered false []			"[ED: from CLR 1.0]"
		Property id URI 1
		Property type URI 0..1
		Property alignments Alignment 0..*
		Property allowedValues String 0..*
		Property name String 1
		Property requiredLevel URI 0..1
		Property requiredValue String 0..1
		Property resultType ResultType 1
		Property rubricCriterionLevels RubricCriterionLevel 0..*
		Property valueMax String 0..1
		Property valueMin String 0..1
		Property extensions Namespace 0..1 

	Class RubricCriterionLevel Unordered false []		"[ED: from CLR 1.0]"
		Property id URI 1
		Property type URI 0..1
		Property alignments Alignment 0..*
		Property description String 0..1
		Property level String 0..1
		Property name String 1
		Property points String 0..1
		Property extensions Namespace 0..1 

	Class SystemIdentifier Unordered false []			"[ED: from CLR 1.0]"
		Property type URI 0..1
		Property identifier String 1
		Property identifierType IdentifierType 1

// Enumerations

	Class AchievementType EnumExt false []				"[ED: from CLR 1.0]"
		Property Achievement Term 1						"Represents a generic achievement."
		Property Assessment Term 1						"Represents the result of a skill, competency, or outcome-based summative assessment."
		Property Assignment Term 1						"Represents the result of a curricular, or co-curricular assignment or exam."
		Property Award Term 1							"Represents an award."
		Property Badge Term 1							"Represents a generic badge. Set the type to 'BadgeClass' and reference the IMS Open Badges @context file if the achievement is an IMS Open Badges achievement."
		Property Certificate Term 1						"Represents a credit bearing certificate such as an undergraduate certificate in autism."
		Property Certification Term 1					"Represents a non-credit certification such as a CompTIA certification in IT."
		Property Course Term 1							"Represents a course completion."
		Property CommunityService Term 1				"Represents community service."
		Property Competency Term 1						"Represents a competency."
		Property Co-Curricular Term 1					"Represents a co-curricular activity."
		Property Degree Term 1							"Represents a degree."
		Property Diploma Term 1							"Represents a diploma such as a high school diploma in the United States."
		Property Fieldwork Term 1						"Represents practical activities that are done away school, college, or place of work. Includes internships and practicums."
		Property License Term 1							"Represents a license."
		Property Membership Term 1						"Represents membership."

	Class ResultStatusType Enumeration false []			"[ED: from CLR 1.0]"
		Property Completed Term 1						"The learner has successfully completed the achievement. This is the default status if no status result is included."
		Property Enrolled Term 1						"The learner is enrolled in the activity described by the achievement."
		Property Failed Term 1							"The learner has unsuccessfully completed the achievement."
		Property InProgress Term 1						"The learner has started progress in the activity described by the achievement."
		Property OnHold Term 1							"The learner has completed the activity described by the achievement, but successful completion has not been awarded, typically for administrative reasons."
		Property Withdrew Term 1						"The learner withdrew from the activity described by the achievement before completion."

	Class ResultType EnumExt false []					"[ED: from CLR 1.0]"
		Property GradePointAverage Term 1				"The result is a grade point average."
		Property LetterGrade Term 1						"The result is a letter grade."
		Property Percent Term 1							"The result is a percent score."
		Property PerformanceLevel Term 1				"The result is a performance level."
		Property PredictedScore Term 1					"The result is a predicted score."
		Property RawScore Term 1						"The result is a raw score."
		Property Result Term 1							"A generic result."
		Property RubricCriterion Term 1					"The result is from a rubric criterion."
		Property RubricCriterionLevel Term 1			"The result is a rubric criterion level."
		Property RubricScore Term 1						"The result represents a rubric score with both a name and a numeric value."
		Property ScaledScore Term 1						"The result is a scaled score."
		Property Status Term 1							"The result conveys the status of the achievement."

	Class IdentifierType EnumExt false []				"[ED: from CLR 1.0]"
		Property LisSourcedId Term 1					"The IMS LIS sourcedId for the achievement represented by the Achievement instance or the IMS LIS sourcedId for the person or organization represented by the Profile instance."
		Property OneRosterSourcedId Term 1				"The IMS OneRoster sourcedId for the achievement represented by the Achievement instance or the IMS OneRoster sourcedId for the person or organization represented by the Profile instance."

	Class TargetType EnumExt false []					"[ED: from CLR 1.0]"
		Property CFItem Term 1							"An alignment to a CASE Framework Item."
		Property CFRubric Term 1						"An alignment to a CASE Framework Rubric."
		Property CFRubricCriterion Term 1				"An alignment to a CASE Framework Rubric Criterion."
		Property CFRubricCriterionLevel Term 1			"An alignment to a CASE Framework Rubric Criterion Level."
		Property CTDL Term 1							"An alignment to a Credential Engine Item."

// Document Payloads

Package DocumentPayloads DataModel

	Class AssertionCredential Unordered false []		"An AssertionCredential is an Assertion with all the properties need to conform with a Verifiable Credential. [[vc-data-model]]"
	    Property @context URI 1..*						"The value of the `@context` property MUST be an ordered set where the first item is a URI with the value 'https://www.w3.org/2018/credentials/v1', and the second item is a URI with the value 'https://purl.imsglobal.org/spec/ob/v3p0/context/ob_v3p0.jsonld'."
		Mixin Assertion

// API Payloads

Package ApiPayloads DataModel

	Class ObPresentation Unordered false []							    "The ObPresentation class is derived from the W3C VerifiablePresentation object. See [[vc-data-model]]."
		Property @context URI 1..*										"The value of the `@context` property MUST be an ordered set where the first item is a URI with the value 'https://www.w3.org/2018/credentials/v1', and the second item is a URI with the value 'https://purl.imsglobal.org/spec/ob/v3p0/context/ob_v3p0.jsonld'."
		Property id	URI	0..1											"Unambiguous reference to the presentation."
		Property type URI 1..*											"The value of the `type` property MUST be an unordered set. One of the items MUST be the URI `VerifiablePresentation`, and one of the items MUST be the URI `ObPresentation`."
		Property verifiableCredential AssertionCredential 1..*			"The set of assertions being presented."
		Property holder URI 0..1  										"If present, the value of the `holder` is expected to be a URI for the entity that is generating the presentation."
		Property proof Proof 0..*										"If present, the value of the `proof` property ensures that the presentation is verifiable."
		Property extensions Namespace 0..* 

	Class Imsx_StatusInfo Unordered false []							"This is the container for the status code and associated information returned within the HTTP messages received from the Service Provider."
	    Property @context URI 0..*
		Property imsx_codeMajor Imsx_CodeMajor 1						"The code major value (from the corresponding enumerated vocabulary)."
		Property imsx_severity Imsx_Severity 1							"The severity value (from the corresponding enumerated vocabulary)."
		Property imsx_description String 0..1							"A human readable description supplied by the entity creating the status code information."
		Property imsx_codeMinor Imsx_CodeMinor 0..1						"The set of reported code minor status codes."

	Class Imsx_CodeMajor Enumeration false []							"This is the set of primary status report values i.e. the major code assigned to the status block. This is used in conjunction with the 'Severity' structure in the status object."
		Property failure Term 1											"Denotes that the transaction request has failed. The detailed reason will be reported in the accompanying 'codeMinor' fields."
		Property processing Term 1										"Denotes that the request is being processed at the destination or there has been a local transmission failure. This value is used in asynchronous services."
		Property success Term 1											"Denotes that the request has been successfully completed. If the associated 'severity' value is 'warning' then the request has been partially successful i.e. best effort by the service provider. Other parts of the status information may provide more insight into a partial success response."
		Property unsupported Term 1										"Denotes that the service provider does not support the requested operation. This is the required default response for an unsupported operation by an implementation."

	Class Imsx_Severity Enumeration false []							"This is the context for the status report values. This is used in conjunction with the 'CodeMajor' structure in the status object."
		Property error Term 1											"A catastrophic error has occurred in processing the request and so the request was not completed (the Service Provider may not even have received the request)."
		Property status Term 1											"The request has been completed and a response was received from the Service Provider."
		Property warning Term 1											"The request has only been partially completed. For an asynchronous service a further response should be expected."

	Class Imsx_CodeMinor Unordered false []								"This is the container for the set of code minor status codes reported in the responses from the Service Provider."
		Property imsx_codeMinorField Imsx_CodeMinorField 1..*			"Each reported code minor status code."

	Class Imsx_CodeMinorField Unordered false []						"This is the container for a single code minor status code."
		Property imsx_codeMinorFieldName NormalizedString 1				"This should contain the identity of the system that has produced the code minor status code report."
		Property imsx_codeMinorFieldValue Imsx_CodeMinorFieldValue 1	"The code minor status code (this is a value from the corresponding enumerated vocabulary)."

	Class Imsx_CodeMinorFieldValue Enumeration false []					"This is the set of codeMinor status codes that are used to provide further insight into the completion status of the end-to-end transaction i.e. this should be used to provide more information than would be supplied by an HTTP code."
		Property forbidden Term 1										"This is used to indicate that the server can be reached and process the request but refuses to take any further action. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '403'."
		Property fullsuccess Term 1										"The request has been fully and successfully implemented by the service provider. For a REST binding this will have an HTTP code of '200' for a successful search request."
		Property internal_server_error Term 1							"This should be used only if there is catastrophic error and there is not a more appropriate code. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '500'."
		Property invalid_data Term 1									"This error condition may occur if a JSON request/response body contains well-formed (i.e. syntactically correct), but semantically erroneous, JSON instructions. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and a HTTP code of '422'."
		Property invalid_query_parameter Term 1							"An invalid data query parameter field was supplied and the query could not be processed. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '400'."
		Property misdirected_request Term 1								"This is used to indicate that the request was made with a protocol that is not supported by the server. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '421'."
		Property not_acceptable Term 1									"This is used to indicate that the server cannot provide a response with a Content-Type that matches any of the content types in the request Accept header. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '406'."
		Property not_allowed Term 1										"This is used to indicate that the server does not allow the HTTP method. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '405'."
		Property not_modified Term 1									"This is used to indicate that the server did not modify the resource. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '304'."
		Property server_busy Term 1										"The server is receiving too many requests. Retry at a later time. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '429'."
		Property unauthorizedrequest Term 1								"The request was not correctly authorised. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code of '401'."
		Property unknown Term 1											"Any other error occurred. This would be accompanied by the 'codeMajor/severity' values of 'failure/error' and for a REST binding a HTTP code corresponding to the error."

Package ApiSecurity DataModel

	Class AuthorizationError Vocabulary false []						"A single ASCII [[RFC20]] error code]. See Section 4.1 of [[RFC6749]]."
		Property invalid_request ASCIIString 1							"The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed."
		Property unauthorized_client ASCIIString 1						"The [=client=] is not authorized to request an authorization code using this method."
		Property access_denied ASCIIString 1							"The [=user=] or [=authorization server=] denied the request."
		Property unsupported_response_type ASCIIString 1				"The [=authorization server=] does not support obtaining an authorization code using this method."
		Property invalid_scope ASCIIString 1							"The requested scope is invalid, unknown, or malformed."
		Property server_error ASCIIString 1								"The [=authorization server=] encountered an unexpected condition that prevented it from fulfilling the request. (This error code is needed because a 500 Internal Server Error HTTP status code cannot be returned to the client via an HTTP redirect.)"
		Property temporarily_unavailable ASCIIString 1					"The [=authorization server=] is currently unable to handle the request due to a temporary overloading or maintenance of the server. (This error code is needed because a 503 Service Unavailable HTTP status code cannot be returned to the client via an HTTP redirect.)"

	Class RegistrationError Vocabulary false []							"This is the set of ASCII error code strings that may be returned in response to a client registration request [[RFC7591]]."
		Property invalid_redirect_uri ASCIIString 1						"The value of one or more redirection URIs is invalid."
		Property invalid_client_metadata ASCIIString 1					"The value of one of the [=client=]] metadata fields is invalid and the server has rejected this request. Note that an [=authorization server=] MAY choose to substitute a valid value for any requested parameter of a [=client=]’s metadata."
		Property invalid_software_statement ASCIIString 1				"The software statement presented is invalid. This MUST only be returned if a Software Statement has been supplied in the registration request. Use of a Software Statement is NOT RECOMMENDED."
		Property unapproved_software_statement ASCIIString 1			"The software statement presented is not approved for use by this authorization server. This MUST only be returned if a Software Statement has been supplied in the registration request. Use of a Software Statement is NOT RECOMMENDED."

	Class TokenError Vocabulary false []								"A single ASCII [[RFC20]] error code. See Section 5.2 of [[RFC6749]]."
		Property invalid_request ASCIIString 1							"The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed."
		Property invalid_client ASCIIString 1							"Client authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method).  The authorization server MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication schemes are supported.  If the client attempted to authenticate via the "Authorization" request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) status code and include the "WWW-Authenticate" response header field matching the authentication scheme used by the client."
		Property invalid_grant ASCIIString 1							"The provided authorization grant (e.g., authorization code, resource owner credentials) or refresh token is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
		Property unauthorized_client ASCIIString 1						"The authenticated client is not authorized to use this authorization grant type."
		Property unsupported_grant_type ASCIIString 1					"The authorization grant type is not supported by the authorization server."
		Property unsupported_token_type ASCIIString 1					"The [=authorization server=] does not support the revocation of the presented token type. That is, the [=client=] tried to revoke an access token on a server not supporting this feature."
		Property invalid_scope ASCIIString 1							"The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner."

// Mixins

	Class Assertion Mixin false [] 					    "Assertions are representations of an awarded achievement, used to share information about a achievement belonging to one earner. Assertions have all the properties needed to conform with a Verifiable Credential as defined in the [[vc-data-model]] specification. Therefore you can say, 'An Assertion IS a Verifiable Credential.'"
		Property id	URI	1  								"Unambiguous reference to the assertion. [ED: Required in OB20 for hosted verification. Optional in OB30?]"
		Property type URI 1..*							"The value of the type property MUST be an unordered set. One of the items MUST be the URI Verifiable Credential, and one of the items MUST be the URI [ED: ImsAssertionCredential?]. [[vc-data-model]]"
		Property issuer Profile 1  						"A description of the individual, entity, or organization that issued the badge. [[vc-data-model]]"
		Property issuanceDate DateTime 1  				"Timestamp of when the achievement was awarded. [[vc-data-model]]"
		Property credentialSubject CredentialSubject 1  "The recipient of the achievement. [[vc-data-model]]"
		Property credentialSchema CredentialSchema 1..* "The value of the `credentialSchema` property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema. One of the data schemas MUST be the JSON Schema for this credential defined by this specification."
		Property image Image 0..1  						"An image representing this user’s achievement. This must be a PNG or SVG image, and should be prepared via the Baking specification. An ‘unbaked’ image for the badge is defined in the BadgeClass and should not be duplicated here. [[OB-BAKE-30]]"
		Property narrative Markdown 0..1  				"A narrative that connects multiple pieces of evidence. Likely only present at this location if evidence is a multi-value array."
		Property expirationDate DateTime 0..1  			"If the achievement has some notion of expiry, this indicates a timestamp when a credential should no longer be considered valid. After this time, the badge credential be considered expired. [[vc-data-model]]"
		Property proof Proof 0..*						"One or more cryptographic proofs that can be used to detect tampering and verify the authorship of a credential (Assertion). Without a proof, this Assertion is a credential, not a verifiable credential. [[vc-data-model]]"
		Property credentialStatus CredentialStatus 0..1	"Provides information about the current status of a verifiable credential, such as whether it is suspended or revoked. [[vc-data-model]]"
		Property extensions Namespace 0..1 	

// Derived Types	

Package DerivedTypes DataModel
	Includes [Term]
	Class URI DerivedType false [NormalizedString]		"A `NormalizedString` that respresents a Uniform Resource Identifier (URI)."
	Class URL DerivedType false [URI]					"A `URI` that represents a Uniform Resource Locator (URL)."
	Class Markdown DerivedType false [String]			"A `String` that may contain Markdown."

// PrimitiveTypes

Package PrimitiveTypes DataModel
	Includes [NonNegativeInteger, NormalizedString, PositiveInteger]
	Class ASCIIString PrimitiveType false []			"An ASCII [[RFC20]] string. The string MUST NOT include characters outside the set %x20-21 / %x23-5B / %x5D-7E."
	Class String PrimitiveType false []					"Character strings"
	Class Namespace PrimitiveType false []				"A namespace data type for defining data from a context other than that as the default for the data model. This is used for importing other data models."
	Class Date PrimitiveType false []					"A `String` conforming to the `date` definition in [[XMLSCHEMA11-2]]."
	Class DateTime PrimitiveType false [] 				"A `String` conforming to the `dateTime` definition in [[XMLSCHEMA11-2]]."
