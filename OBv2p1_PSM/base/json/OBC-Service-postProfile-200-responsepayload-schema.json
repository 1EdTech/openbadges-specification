{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id" : "postProfile-200-responsepayload-schema.json",
    "title" : "Open Badges Version 2.1 IMS Candidate Final JSON Schema Binding (postProfile-200-responsepayload-schema)",
    "description" : "Author-@@@TBD;  Version-2.1;  Release Date-June 2019. ",
    "type" : "object",
    "properties" : {
        "status" : {
            "description" : "The 'status' property MUST appear on all responses.",
            "$ref" : "#/definitions/StatusDType"
        },
        "results" : {
            "description" : "A list of zero or more profiles responsive to the request.",
            "type" : "array",
            "minItems" : 0,
            "items" : {
                "$ref" : "#/definitions/ProfileDType"
            }
        }
    },
    "required" : [ "status" ],
    "additionalProperties" : false,
    "definitions" : {
        "EndorsementDType" : {
            "description" : "...tbd (Class description)...",
            "type" : "object",
            "properties" : {
                "id" : {
                    "description" : "Unique IRI for the Endorsement instance. If using hosted verification, this should be the URI where the assertion of endorsement is accessible. For signed Assertions, it is recommended to use a UUID in the urn:uuid namespace.",
                    "$ref" : "#/definitions/idDType"
                },
                "type" : {
                    "description" : "Endorsement, a subclass of VCTF's Credential.",
                    "$ref" : "#/definitions/typeDType"
                },
                "claim" : {
                    "description" : "An entity, identified by an id and additional properties that the endorser would like to claim about that entity.",
                    "$ref" : "#/definitions/idDType"
                },
                "issuer" : {
                    "description" : "The profile of the Endorsementâ€™s issuer.",
                    "$ref" : "#/definitions/idDType"
                },
                "issuedOn" : {
                    "description" : "Model Primitive Datatype = DateTime. Timestamp of when the endorsement was published.",
                    "type" : "string",
                    "format" : "date-time"
                },
                "verification" : {
                    "description" : "Instructions for third parties to verify this assertion of endorsement.",
                    "$ref" : "#/definitions/VerificationObjectDType"
                }
            },
            "required" : [ "id","type","issuer","issuedOn","verification" ],
            "additionalProperties" : false
        },
        "ProfileDType" : {
            "description" : "A Profile is a collection of information that describes the entity or organization using Open Badges. Issuers must be represented as Profiles, and recipients, endorsers, or other entities may also be represented using this vocabulary. Each Profile that represents an Issuer may be referenced in many BadgeClasses that it has defined. Anyone can create and host an Issuer file to start issuing Open Badges. Issuers may also serve as recipients of Open Badges, often identified within an Assertion by specific properties, like their url or contact email address. An Issuer Profile is a subclass of the general Profile with some additional requirements.",
            "type" : "object",
            "properties" : {
                "id" : {
                    "description" : "Unique IRI for the Issuer/Profile file. Most platforms to date can only handle HTTP-based IRIs.",
                    "$ref" : "#/definitions/idDType"
                },
                "type" : {
                    "description" : "Valid JSON-LD representation of the Issuer or Profile type. In most cases, this will simply be the string Issuer or the more general Profile. An array including Issuer and other string elements that are either URLs or compact IRIs within the current context are allowed.",
                    "$ref" : "#/definitions/typeDType"
                },
                "name" : {
                    "description" : "Model Primitive Datatype = String. The name of the entity or organization.",
                    "type" : "string"
                },
                "url" : {
                    "description" : "Model Primitive Datatype = AnyURI. The homepage or social media profile of the entity, whether individual or institutional. Should be a URL/URI Accessible via HTTP.",
                    "type" : "string",
                    "format" : "uri"
                },
                "telephone" : {
                    "description" : "Model Primitive Datatype = String. A phone number for the entity. For maximum compatibility, the value should be expressed as a + and country code followed by the number with no spaces or other punctuation, like +16175551212 (E.164 format).",
                    "type" : "string"
                },
                "description" : {
                    "description" : "Model Primitive Datatype = String. A short description of the issuer entity or organization.",
                    "type" : "string"
                },
                "image" : {
                    "description" : "An image representing the issuer. May be a Data URI, or URI where the image may be found or an instance of the Image class.",
                    "$ref" : "#/definitions/idDType"
                },
                "email" : {
                    "description" : "Model Primitive Datatype = String. Contact address for the individual or organization.",
                    "type" : "string"
                },
                "publicKey" : {
                    "description" : "The key(s) an issuer uses to sign Assertions.",
                    "$ref" : "#/definitions/idDType"
                },
                "verification" : {
                    "description" : "Instructions for how to verify Assertions published by this Profile.",
                    "$ref" : "#/definitions/VerificationObjectDType"
                },
                "revocationList" : {
                    "description" : "HTTP URI of the Badge Revocation List used for marking revocation of signed badges.",
                    "$ref" : "#/definitions/idDType"
                },
                "endorsement" : {
                    "description" : "...tbd (ComplexType property description)...",
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                        "$ref" : "#/definitions/EndorsementDType"
                    }
                }
            },
            "required" : [ "id","type" ],
            "additionalProperties" : true
        },
        "StatusDType" : {
            "description" : "Response status.",
            "type" : "object",
            "properties" : {
                "error" : {
                    "description" : "Model Primitive Datatype = String. A nullable string and the human-readable message describing the problem.",
                    "type" : "string"
                },
                "statusCode" : {
                    "description" : "Model Primitive Datatype = PositiveInteger. The HTTP status code of the response.",
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 1
                },
                "statusText" : {
                    "description" : "A string matching one of the enumerated and allowed values for the given endpoint.",
                    "type" : "string",
                    "enum" : [ "OK","REQUEST_VALIDATION_ERROR","RECIPIENT_PROFILE_MISMATCH","INVALID_BADGE","BAD_REQUEST","UNAUTHENTICATED","PERMISSION_DENIED","NOT_FOUND","METHOD_NOT_ALLOWED" ]
                }
            },
            "required" : [ "statusCode" ],
            "additionalProperties" : false
        },
        "VerificationObjectDType" : {
            "description" : "A collection of information allowing an inspector to verify an Assertion.",
            "type" : "object",
            "properties" : {
                "type" : {
                    "description" : "The type of verification method.",
                    "$ref" : "#/definitions/typeDType"
                },
                "verificationProperty" : {
                    "description" : "The @id of the property to be used for verification that an Assertion is within the allowed scope.",
                    "$ref" : "#/definitions/idDType"
                },
                "startsWith" : {
                    "description" : "Model Primitive Datatype = String. The URI fragment that the verification property must start with.",
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                        "type" : "string"
                    }
                },
                "allowedOrigins" : {
                    "description" : "Model Primitive Datatype = String. The host registered name subcomponent of an allowed origin.",
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                        "type" : "string"
                    }
                },
                "creator" : {
                    "description" : "The (HTTP) id of the key used to sign the Assertion.",
                    "$ref" : "#/definitions/idDType"
                }
            },
            "additionalProperties" : false
        },
        "idDType" : {
            "description" : "JSON-LD @id.",
            "type" : "object",
            "properties" : {

            },
            "additionalProperties" : false
        },
        "typeDType" : {
            "description" : "JSON-LD @type.",
            "type" : "object",
            "properties" : {

            },
            "additionalProperties" : false
        }
    }
}
